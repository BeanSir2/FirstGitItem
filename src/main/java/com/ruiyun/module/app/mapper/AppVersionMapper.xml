<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruiyun.module.app.proxy.AppVersionProxy" >
  <resultMap id="BaseResultMap" type="com.ruiyun.module.app.entity.AppVersion" >
    <id column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="app_name" property="appName" jdbcType="VARCHAR" />
    <result column="system_type" property="systemType" jdbcType="INTEGER" />
    <result column="version_num" property="versionNum" jdbcType="VARCHAR" />
    <result column="version_service_num" property="versionServiceNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_must_update" property="isMustUpdate" jdbcType="INTEGER" />
    <result column="download_url" property="downloadUrl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    version_id, app_name, system_type, version_num, version_service_num, create_time, 
    is_must_update, download_url, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from app_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_version
    where version_id = #{appVersion.versionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ruiyun.module.app.entity.AppVersion" >
    insert into app_version (version_id, app_name, system_type, 
      version_num, version_service_num, create_time, 
      is_must_update, download_url, status
      )
    values (#{appVersion.versionId,jdbcType=INTEGER}, #{appVersion.appName,jdbcType=VARCHAR}, #{appVersion.systemType,jdbcType=INTEGER}, 
      #{appVersion.versionNum,jdbcType=VARCHAR}, #{appVersion.versionServiceNum,jdbcType=INTEGER}, #{appVersion.createTime,jdbcType=TIMESTAMP}, 
      #{appVersion.isMustUpdate,jdbcType=INTEGER}, #{appVersion.downloadUrl,jdbcType=VARCHAR}, #{appVersion.status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ruiyun.module.app.entity.AppVersion" >
    insert into app_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="appVersion.versionId != null" >
        version_id,
      </if>
      <if test="appVersion.appName != null" >
        app_name,
      </if>
      <if test="appVersion.systemType != null" >
        system_type,
      </if>
      <if test="appVersion.versionNum != null" >
        version_num,
      </if>
      <if test="appVersion.versionServiceNum != null" >
        version_service_num,
      </if>
      <if test="appVersion.createTime != null" >
        create_time,
      </if>
      <if test="appVersion.isMustUpdate != null" >
        is_must_update,
      </if>
      <if test="appVersion.downloadUrl != null" >
        download_url,
      </if>
      <if test="appVersion.status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="appVersion.versionId != null" >
        #{appVersion.versionId,jdbcType=INTEGER},
      </if>
      <if test="appVersion.appName != null" >
        #{appVersion.appName,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.systemType != null" >
        #{appVersion.systemType,jdbcType=INTEGER},
      </if>
      <if test="appVersion.versionNum != null" >
        #{appVersion.versionNum,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.versionServiceNum != null" >
        #{appVersion.versionServiceNum,jdbcType=INTEGER},
      </if>
      <if test="appVersion.createTime != null" >
        #{appVersion.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appVersion.isMustUpdate != null" >
        #{appVersion.isMustUpdate,jdbcType=INTEGER},
      </if>
      <if test="appVersion.downloadUrl != null" >
        #{appVersion.downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.status != null" >
        #{appVersion.status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruiyun.module.app.entity.AppVersion" >
    update app_version
    <set >
      <if test="appVersion.appName != null" >
        app_name = #{appVersion.appName,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.systemType != null" >
        system_type = #{appVersion.systemType,jdbcType=INTEGER},
      </if>
      <if test="appVersion.versionNum != null" >
        version_num = #{appVersion.versionNum,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.versionServiceNum != null" >
        version_service_num = #{appVersion.versionServiceNum,jdbcType=INTEGER},
      </if>
      <if test="appVersion.createTime != null" >
        create_time = #{appVersion.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appVersion.isMustUpdate != null" >
        is_must_update = #{appVersion.isMustUpdate,jdbcType=INTEGER},
      </if>
      <if test="appVersion.downloadUrl != null" >
        download_url = #{appVersion.downloadUrl,jdbcType=VARCHAR},
      </if>
      <if test="appVersion.status != null" >
        status = #{appVersion.status,jdbcType=INTEGER},
      </if>
    </set>
    where version_id = #{appVersion.versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruiyun.module.app.entity.AppVersion" >
    update app_version
    set app_name = #{appVersion.appName,jdbcType=VARCHAR},
      system_type = #{appVersion.systemType,jdbcType=INTEGER},
      version_num = #{appVersion.versionNum,jdbcType=VARCHAR},
      version_service_num = #{appVersion.versionServiceNum,jdbcType=INTEGER},
      create_time = #{appVersion.createTime,jdbcType=TIMESTAMP},
      is_must_update = #{appVersion.isMustUpdate,jdbcType=INTEGER},
      download_url = #{appVersion.downloadUrl,jdbcType=VARCHAR},
      status = #{appVersion.status,jdbcType=INTEGER}
    where version_id = #{appVersion.versionId,jdbcType=INTEGER}
  </update>
  <update id="enable">
    update app_version
    set
      status = 1
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="disable">
    update app_version
    set
      status = 0
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <select id="getVersionCount" parameterType="com.ruiyun.module.app.entity.AppVersion" resultType="java.lang.Long" >
  	select count(*)
    from app_version
    where 1=1
	    <if test="appVersion.systemType != null and appVersion.systemType != ''">
			And system_type = #{appVersion.systemType}
		</if>
		<if test="appVersion.isMustUpdate != null and appVersion.isMustUpdate != ''">
			And is_must_update = #{appVersion.isMustUpdate}
		</if>
		<if test="appVersion.status != null and appVersion.status != ''">
			And status = #{appVersion.status}
		</if>
		<if test="appVersion.appName != null and appVersion.appName != ''">
			And app_name like concat('%', #{appVersion.appName}, '%')
		</if>
		<if test="appVersion.versionNum != null and appVersion.versionNum != ''">
			And version_num like concat('%', #{appVersion.versionNum}, '%')
		</if>
		<if test="appVersion.versionServiceNum != null and appVersion.versionServiceNum != ''">
			And version_service_num like concat('%', #{appVersion.versionServiceNum}, '%')
		</if>
		<if test="appVersion.startDate != null and appVersion.startDate != ''">
			And create_time &gt;= concat(#{appVersion.startDate}, ' 00:00:00')
		</if>
		<if test="appVersion.endDate != null and appVersion.endDate != ''">
			And create_time &lt;= concat(#{appVersion.endDate}, ' 23:59:59')
		</if>
  </select>
  <select id="getVersionList" parameterType="com.ruiyun.module.app.entity.AppVersion" resultMap="BaseResultMap" >
  	select <include refid="Base_Column_List" />
    from app_version
    where 1=1
	     <if test="appVersion.systemType != null and appVersion.systemType != ''">
			And system_type = #{appVersion.systemType}
		</if>
		<if test="appVersion.isMustUpdate != null and appVersion.isMustUpdate != ''">
			And is_must_update = #{appVersion.isMustUpdate}
		</if>
		<if test="appVersion.status != null and appVersion.status != ''">
			And status = #{appVersion.status}
		</if>
		<if test="appVersion.appName != null and appVersion.appName != ''">
			And app_name like concat('%', #{appVersion.appName}, '%')
		</if>
		<if test="appVersion.versionNum != null and appVersion.versionNum != ''">
			And version_num like concat('%', #{appVersion.versionNum}, '%')
		</if>
		<if test="appVersion.versionServiceNum != null and appVersion.versionServiceNum != ''">
			And version_service_num like concat('%', #{appVersion.versionServiceNum}, '%')
		</if>
		<if test="appVersion.startDate != null and appVersion.startDate != ''">
			And create_time &gt;= concat(#{appVersion.startDate}, ' 00:00:00')
		</if>
		<if test="appVersion.endDate != null and appVersion.endDate != ''">
			And create_time &lt;= concat(#{appVersion.endDate}, ' 23:59:59')
		</if>
    order by create_time desc
    <if test="page != null and page != ''">
		LIMIT #{page.startRow}, #{page.endRow}
	</if>
  </select>
</mapper>