<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruiyun.module.bee.proxy.BeePersonnelProxy">
  <resultMap id="BaseResultMap" type="com.ruiyun.module.bee.entity.BeePersonnelEntity">
    <id column="bee_personnel_id" property="beePersonnelId" jdbcType="INTEGER" />
    <result column="personnel_name" property="personnelName" jdbcType="VARCHAR" />
    <result column="personnel_tel" property="personnelTel" jdbcType="VARCHAR" />
    <result column="personnel_permission" property="personnelPermission" jdbcType="VARCHAR" />
    <result column="id_code" property="idCode" jdbcType="INTEGER" />
    <result column="parent_bee_personnel_id" property="parentBeePersonnelId" jdbcType="INTEGER" />
    <result column="bee_team_id" property="beeTeamId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="bee_login_account" property="beeLoginAccount" jdbcType="VARCHAR" />
    <result column="bee_login_pwd" property="beeLoginPwd" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="auth_status" property="authStatus" jdbcType="INTEGER" />
    <result column="auth_time" property="authTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_personnel_id" property="createPersonnelId" jdbcType="INTEGER" />
    <result column="create_personnel_name" property="createPersonnelName" jdbcType="VARCHAR" />
    <result column="merchant_id" property="merchantId" jdbcType="INTEGER" /> 
  </resultMap>
  
  <select id="getGridDataPersonnel" resultMap="BaseResultMap" parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
	SELECT
		b.bee_personnel_id,
		b.personnel_name,
		b.create_time,
		b.personnel_permission,
		b.personnel_tel,
		b.id_code,
		b.last_login_time,
	IF (
		b.parent_bee_personnel_id = 0,
		'——',
		(
			SELECT
				m.personnel_name
			FROM
				bee_personnel m
			WHERE
				b.parent_bee_personnel_id = m.bee_personnel_id
		)
	) parentBeePersonnelName,
 	IF (
		b.bee_team_id = 0,
		'——',
		(
			SELECT
				t.team_name
			FROM
				bee_team t
			WHERE
				b.bee_team_id = t.bee_team_id
		)
	)beeTeamName,
		b.bee_team_id,
 		b.last_login_time,
		b.status,
 		b.auth_status,
 		s.company_name companyName
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
 			1=1 
 			AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
		<if test="entity.provinceId != null and entity.provinceId !='' ">
			AND s.province_id = #{entity.provinceId}
		</if>
		<if test="entity.cityId != null and entity.cityId !='' ">
			AND s.city_id = #{entity.cityId}
		</if>
		<if test="entity.personnelPermission != null and entity.personnelPermission !='' ">
			AND b.personnel_permission = #{entity.personnelPermission}
	   </if>
	   <if test="entity.searchValue != null and entity.searchValue !='' ">
			AND (b.personnel_tel = #{entity.searchValue} or b.personnel_name like CONCAT('%',#{entity.searchValue},'%'))
	  </if>
 	</where>
  		<if test="pageParams != null and pageParams != ''">
			ORDER BY
				b.create_time desc
			LIMIT
				#{pageParams.startRow}, #{pageParams.endRow}
		</if>
 </select>
 
 <select id="getGridDataPersonnelCount" resultType="java.lang.Long" parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
	SELECT
		count(*)
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
 			 1=1 
 		AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
		<if test="entity.provinceId != null and entity.provinceId !='' ">
			AND s.province_id = #{entity.provinceId}
		</if>
		<if test="entity.cityId != null and entity.cityId !='' ">
			AND s.city_id = #{entity.cityId}
		</if>
		<if test="entity.personnelPermission != null and entity.personnelPermission !='' ">
			AND b.personnel_permission = #{entity.personnelPermission}
	   </if>
	   <if test="entity.searchValue != null and entity.searchValue !='' ">
			AND (b.personnel_tel = #{entity.searchValue} or b.personnel_name like CONCAT('%',#{entity.searchValue},'%'))
	  </if>
 	</where>
 </select>
 
 
 
  <select id="getBeePersonnelEntity" resultMap="BaseResultMap">
	SELECT
		b.*
	FROM
		bee_personnel b
	<where>
			b.bee_login_account = #{beeLoginAccount}
		and b.bee_login_pwd = #{beeLoginPwd}
	</where>
 </select>
 
   <select id="getByTelOrLoingAccount" resultType="java.lang.Long">
	SELECT
		count(*)
	FROM
		bee_personnel
	<where>
		 	personnel_tel = #{personnelTel} 
		 OR 
			 bee_login_account = #{beeLoginAccount}
	</where>
 </select>
 <select id="getByTel" resultType="java.lang.Long">
	SELECT
		count(*)
	FROM
		bee_personnel
	<where>
		 personnel_tel = #{personnelTel} 
	</where>
 </select>
  <select id="getByLoingAccount" resultType="java.lang.Long">
	SELECT
		count(*)
	FROM
		bee_personnel
	<where>
		 bee_login_account = #{beeLoginAccount}
	</where>
 </select>
 
 
 <select id="getpersonlist" resultMap="BaseResultMap">
	SELECT
		b.bee_personnel_id,
		b.personnel_name,
		b.personnel_tel,
		b.create_time
	FROM
		bee_personnel b
	<where>
		b.status = 1
	  AND b.bee_team_id = #{beeTeamId}
	  AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
  </where>
  	<if test="pageParams != null and pageParams != ''">
		ORDER BY
			#{pageParams.sort} #{pageParams.order},create_time desc
		LIMIT
			#{pageParams.startRow}, #{pageParams.endRow}
	</if>
 </select>
 
  <select id="getpersonlistCount" resultType="java.lang.Long">
	SELECT
		count(*)
	FROM
		bee_personnel b
	<where>
		b.status = 1
	  AND b.bee_team_id = #{beeTeamId}
	  AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
  </where>
  	<if test="pageParams != null and pageParams != ''">
		ORDER BY
			#{pageParams.sort} #{pageParams.order},create_time desc
		LIMIT
			#{pageParams.startRow}, #{pageParams.endRow}
	</if>
 </select>
 
 
 <select id="getteamlist" resultMap="BaseResultMap" parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
	SELECT
		b.bee_personnel_id,
		b.personnel_name,
		b.personnel_tel,
		b.personnel_permission,
		b.id_code,
		b.create_time,
		s.company_name companyName
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
	      b.status = 1
	  AND b.bee_team_id = 0
	  AND b.personnel_permission like '小蜜蜂'
	  AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
	 <if test="entity.searchValue != null and entity.searchValue != ''">
	  AND b.personnel_name like concat('%',#{entity.searchValue},'%')
	  OR  b.personnel_tel = #{entity.searchValue}
	</if>
  </where>
  		<if test="pageParams != null and pageParams != ''">
			ORDER BY
				#{pageParams.sort} #{pageParams.order},b.create_time desc
			LIMIT
				#{pageParams.startRow}, #{pageParams.endRow}
		</if>
 </select>
 <select id="getteamlistCount" resultType="java.lang.Long" parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
	SELECT
		count(*)
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
 			b.status = 1
	  AND b.bee_team_id = 0
	  AND b.personnel_permission like '小蜜蜂'
	  AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND b.company_id = soc.company_id
			)
	<if test="entity.searchValue != null and entity.searchValue != ''">
	  AND b.personnel_name like concat('%',#{entity.searchValue},'%')
	  OR  b.personnel_tel = #{entity.searchValue}
	</if>
  </where>
  		<if test="pageParams != null and pageParams != ''">
			ORDER BY
				#{pageParams.sort} #{pageParams.order},b.create_time desc
			LIMIT
				#{pageParams.startRow}, #{pageParams.endRow}
		</if>
 </select>
  <select id="selectByPrimaryKeySelective" resultMap="BaseResultMap">
	SELECT
		*
	FROM
		bee_personnel
	<where>
		bee_personnel_id = #{beePersonnelId}
  </where>
 </select>
 
 
   <insert id="insertSelective"  parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
		insert into bee_personnel
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="beePersonnelId != null">
				bee_personnel_id,
			</if>
			<if test="personnelName != null">
				personnel_name,
			</if>
			<if test="personnelTel != null">
				personnel_tel,
			</if>
			<if test="personnelPermission != null">
				personnel_permission,
			</if>
			<if test="idCode != null">
				id_code,
			</if>
			<if test="parentBeePersonnelId != null">
				parent_bee_personnel_id,
			</if>
			<if test="beeTeamId != null">
				bee_team_id,
			</if>
			<if test="companyId != null">
				company_id,
			</if>
			<if test="beeLoginAccount != null">
				bee_login_account,
			</if>
			<if test="beeLoginPwd != null">
				bee_login_pwd,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="authStatus != null">
				auth_status,
			</if>
			<if test="authTime !=null">
				auth_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="openid != null">
				openid,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createPersonnelId != null">
				create_personnel_id,
			</if>
			<if test="createPersonnelName != null">
				create_personnel_name,
			</if>
			<if test="merchantId != null">
				merchant_id,
			</if>
			
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="beePersonnelId != null">
				#{beePersonnelId,jdbcType=INTEGER},
			</if>
			<if test="personnelName != null">
				#{personnelName,jdbcType=VARCHAR},
			</if>
			<if test="personnelTel != null">
				#{personnelTel,jdbcType=VARCHAR},
			</if>
			<if test="personnelPermission != null">
				#{personnelPermission,jdbcType=VARCHAR},
			</if>
			<if test="idCode != null">
				#{idCode,jdbcType=VARCHAR},
			</if>
			<if test="parentBeePersonnelId != null">
				#{parentBeePersonnelId,jdbcType=INTEGER},
			</if>
			<if test="beeTeamId != null">
				#{beeTeamId,jdbcType=INTEGER},
			</if>
			<if test="companyId != null">
				#{companyId,jdbcType=INTEGER},
			</if>
			<if test="beeLoginAccount != null">
				#{beeLoginAccount,jdbcType=VARCHAR},
			</if>
			<if test="beeLoginPwd != null">
				#{beeLoginPwd,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="authStatus != null">
				#{authStatus,jdbcType=INTEGER},
			</if>
			<if test="authTime !=null">
				#{authTime,jdbcType=TIMESTAMP},
			</if>	
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="openid != null">
				#{openid,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPersonnelId != null">
				#{createPersonnelId,jdbcType=INTEGER},
			</if>
			<if test="createPersonnelName != null">
				#{createPersonnelName,jdbcType=VARCHAR},
			</if>
			<if test="merchantId != null">
				#{merchantId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.ruiyun.module.bee.entity.BeePersonnelEntity">
   		update bee_personnel
    	<set >
			<if test="personnelName != null">
				personnel_name = #{personnelName,jdbcType=VARCHAR},
			</if>
			<if test="personnelTel != null">
				personnel_tel = #{personnelTel,jdbcType=VARCHAR},
			</if>
			<if test="personnelPermission != null">
				personnel_permission = #{personnelPermission,jdbcType=VARCHAR},
			</if>
			<if test="idCode != null">
				id_code = #{idCode,jdbcType=VARCHAR},
			</if>
			<if test="parentBeePersonnelId != null">
				parent_bee_personnel_id = #{parentBeePersonnelId,jdbcType=INTEGER},
			</if>
			<if test="beeTeamId != null">
				bee_team_id = #{beeTeamId,jdbcType=INTEGER},
			</if>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=INTEGER},
			</if>
			<if test="beeLoginAccount != null">
				bee_login_account = #{beeLoginAccount,jdbcType=VARCHAR},
			</if>
			<if test="beeLoginPwd != null">
				bee_login_pwd = #{beeLoginPwd,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="authStatus != null">
				auth_status = #{authStatus,jdbcType=INTEGER},
			</if>
			<if test="authTime !=null">
				auth_time = #{authTime,jdbcType=TIMESTAMP},
			</if>	
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="openid != null">
				openid = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createPersonnelId != null">
				create_personnel_id = #{createPersonnelId,jdbcType=INTEGER},
			</if>
			<if test="createPersonnelName != null">
				create_personnel_name = #{createPersonnelName,jdbcType=VARCHAR},
			</if>
			<if test="merchantId != null">
				merchant_id = #{merchantId,jdbcType=INTEGER},
			</if>
    	</set>
    <where>
    	<if test="beePersonnelId != null">
			bee_personnel_id = #{beePersonnelId,jdbcType=INTEGER}
		</if>
    </where>
  </update>
  
  <select id="ByPrimaryKeySelective" resultMap="BaseResultMap">
	SELECT
		b.bee_personnel_id,
		b.personnel_name,
		b.create_time,
		b.personnel_permission,
		b.personnel_tel,
		b.id_code,
		b.last_login_time,
		b.bee_login_account,
		b.bee_login_pwd,
		b.company_id,
		
	IF (
		b.parent_bee_personnel_id = 0,
		'——',
		(
			SELECT
				m.personnel_name
			FROM
				bee_personnel m
			WHERE
				b.parent_bee_personnel_id = m.bee_personnel_id
		)
	) parentBeePersonnelName,
 	IF (
		b.bee_team_id = 0,
		'——',
		(
			SELECT
				t.team_name
			FROM
				bee_team t
			WHERE
				b.bee_team_id = t.bee_team_id
		)
	)beeTeamName,
		b.status,
 		b.auth_status,
 		s.company_name companyName
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
 		 b.bee_personnel_id = #{beePersonnelId}
 	</where>
 </select>
 
   <select id="getAllBee" resultMap="BaseResultMap">
	SELECT
		bp.bee_personnel_id,
		bp.personnel_name,
		bp.bee_team_id,
		IFNULL(bt.team_name, '——') beeTeamName,
<!-- 		btp.bee_task_id beeTaskId,
		IF(bee_task_id = null,
			 '——',
			 (
			 	select
			 		 bk.task_name
				from 
					bee_task bk
				where 
					btp.bee_task_id = bk.bee_task_id
				)
			) taskName, -->
		IF (
			bp.parent_bee_personnel_id = 0,
			'——',
			(
				SELECT
					m.personnel_name
				FROM
					bee_personnel m
				WHERE
					bp.parent_bee_personnel_id = m.bee_personnel_id
			)
		) parentBeePersonnelName,
		bp.company_id,
		DATE_FORMAT(bp.create_time,'%Y-%m-%d %T') createTime,
		bp.personnel_permission,
		bp.personnel_tel,
		s.company_name companyName
	FROM
			bee_personnel bp
		LEFT JOIN bee_team bt ON bp.bee_team_id = bt.bee_team_id
		LEFT JOIN bee_task_personnel btp ON bp.bee_personnel_id = btp.bee_personnel_id
		LEFT JOIN system_company s ON bp.company_id = s.company_id
	<where>
			bp.status = 1
		AND bp.personnel_permission LIKE '小蜜蜂'
		AND EXISTS (
			SELECT
				*
			FROM
				system_operator_company soc
			WHERE
 				soc.operator_id = #{operatorId}
			AND bp.company_id = soc.company_id
			)
		<if test="entity.beePersonnelId != null and entity.beePersonnelId != ''">
			AND bp.bee_personnel_id = #{entity.beePersonnelId}
		</if>
		<if test="entity.beeTeamId != null and entity.beeTeamId != ''">
			AND bp.bee_team_id = #{entity.beeTeamId}
		</if>
		<if test="entity.beeTaskId != null and entity.beeTaskId != ''">
			AND btp.bee_task_id = #{entity.beeTaskId}
		</if>
		group by bp.bee_personnel_id
 	</where>
 		 <if test="pageParams != null and pageParams != ''">
			ORDER BY
				bp.create_time desc
			LIMIT
				#{pageParams.startRow}, #{pageParams.endRow}
		</if>
 </select>
 
 <select id="getAllBeeCount" resultType="java.lang.Long">
	SELECT
		count(*)
	FROM
		(
			SELECT
				bp.bee_personnel_id,
				bp.personnel_name,
				bp.bee_team_id,
				IFNULL(bt.team_name, '——') beeTeamName,
				IF (
					bp.parent_bee_personnel_id = 0,
					'——',
					(
						SELECT
							m.personnel_name
						FROM
							bee_personnel m
						WHERE
							bp.parent_bee_personnel_id = m.bee_personnel_id
					)
				) parentBeePersonnelName,
				bp.company_id,
				DATE_FORMAT(bp.create_time,'%Y-%m-%d %T') createTime,
				bp.personnel_permission,
				bp.personnel_tel,
				s.company_name companyName
			FROM
				bee_personnel bp
			LEFT JOIN bee_team bt ON bp.bee_team_id = bt.bee_team_id
			LEFT JOIN bee_task_personnel btp ON bp.bee_personnel_id = btp.bee_personnel_id
			LEFT JOIN system_company s ON bp.company_id = s.company_id
			WHERE
				bp.status = 1
			AND bp.personnel_permission LIKE '小蜜蜂'
			AND EXISTS (
				SELECT
					*
				FROM
					system_operator_company soc
				WHERE
 					soc.operator_id = #{operatorId}
				AND bp.company_id = soc.company_id
			)
		<if test="entity.beePersonnelId != null and entity.beePersonnelId != ''">
			AND bp.bee_personnel_id = #{entity.beePersonnelId}
		</if>
		<if test="entity.beeTeamId != null and entity.beeTeamId != ''">
			AND bp.bee_team_id = #{entity.beeTeamId}
		</if>
		<if test="entity.beeTaskId != null and entity.beeTaskId != ''">
			AND btp.bee_task_id = #{entity.beeTaskId}
		</if>
			GROUP BY
				bp.bee_personnel_id
		)b
 </select>
 
 
  <select id="getBee" resultMap="BaseResultMap">
	SELECT
		b.bee_personnel_id,
		b.bee_team_id,
		b.parent_bee_personnel_id
	FROM
		bee_personnel b
	LEFT JOIN system_company s ON b.company_id = s.company_id
	<where>
			b.status = 1
			AND b.personnel_permission like '小蜜蜂'
			AND EXISTS (
				SELECT
					*
				FROM
					system_operator_company soc
				WHERE
 					soc.operator_id = #{operatorId}
				AND b.company_id = soc.company_id
			)
		<if test="entity.beeTeamId != null and entity.beeTeamId != ''">
			AND b.bee_team_id = #{entity.beeTeamId}
		</if>	
 	</where>
 </select>
 

   <select id="selectByTeamId" resultMap="BaseResultMap">
	SELECT
		*
	FROM
		bee_personnel
	<where>
			bee_team_id = #{beeTeamId}
		AND personnel_permission LIKE '行销经理'
 	</where>
 </select>
 
  <select id="selectAllByTeamId" resultMap="BaseResultMap">
	SELECT
		*
	FROM
		bee_personnel
	<where>
			bee_team_id = #{beeTeamId}
 	</where>
 </select>
</mapper>